generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String     @id @default(cuid())
  clerkId   String     @unique
  email     String     @unique
  createdAt DateTime   @default(now())
  projects  ProjectMember[]
}

model Project {
  id              String     @id @default(cuid())
  subdomain       String     @unique
  createdAt       DateTime   @default(now())
  // GitHub integration fields
  githubRepoOwner String?
  githubRepoName  String?
  githubBranch    String?    @default("main")
  githubToken     String?    // Store encrypted
  members         ProjectMember[]
  entries         Entry[]
}

model ProjectMember {
  id        String   @id @default(cuid())
  role      String   @default("member")
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String

  @@unique([userId, projectId])
}

model Entry {
  id          String    @id @default(cuid())
  title       String
  content     String
  createdAt   DateTime  @default(now())
  isDraft     Boolean   @default(false)
  // Store commit data for reference
  fromCommits Json?     // Array of commit data used to generate this entry
  startDate   DateTime? // Start of commit range
  endDate     DateTime? // End of commit range
  project     Project   @relation(fields: [projectId], references: [id])
  projectId   String
}